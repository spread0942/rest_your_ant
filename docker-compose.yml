services:
  # Traefik Reverse Proxy
  traefik:
    image: traefik:v3.3
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
  
  # PostgreSQL Database
  db:
    image: postgres:16
    container_name: restaurant_db
    environment:
      POSTGRES_DB: restaurant_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Node.js API
  api:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: restaurant_api
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: restaurant_db
      DB_USER: postgres
      DB_PASSWORD: password
      JWT_SECRET: your-super-secret-jwt-key-here
      PORT: 3000
      NODE_ENV: production
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=(Host(`rest_your_ant.localhost`) && PathPrefix(`/api`))"
      - "traefik.http.routers.api.service=api"
      - "traefik.http.middlewares.api-strip.stripprefix.prefixes=/api"
      - "traefik.http.routers.api.middlewares=api-strip@docker"
      - "traefik.http.services.api.loadbalancer.server.port=3000"
      - "traefik.http.routers.api.priority=100"

  # Vue.js Frontend
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: restaurant_frontend
    ports:
      - "8000:8000"
    restart: unless-stopped
    environment:
      - VUE_APP_API_ENDPOINT=http://rest_your_ant.localhost/api/api
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`rest_your_ant.localhost`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=8000"
      - "traefik.http.routers.frontend.priority=10"

volumes:
  postgres_data:
