services:
  # PostgreSQL Database
  db:
    image: postgres:16
    container_name: restaurant_db
    environment:
      POSTGRES_DB: restaurant_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - restaurant_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Node.js API
  api:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: restaurant_api
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: restaurant_db
      DB_USER: postgres
      DB_PASSWORD: password
      JWT_SECRET: your-super-secret-jwt-key-here
      PORT: 3000
      NODE_ENV: production
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - restaurant_network
    restart: unless-stopped

  # Vue.js Frontend
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: restaurant_frontend
    ports:
      - "8080:8080"
    networks:
      - restaurant_network
    restart: unless-stopped
    volumes:
      - ./frontend:/app
      - /app/node_modules

volumes:
  postgres_data:

networks:
  restaurant_network:
    driver: bridge
